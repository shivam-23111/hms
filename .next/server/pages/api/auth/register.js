"use strict";(()=>{var e={};e.id=443,e.ids=[443],e.modules={2478:(e,t,r)=>{r.r(t),r.d(t,{config:()=>p,default:()=>P,routeModule:()=>c});var n={};r.r(n),r.d(n,{default:()=>f});var i=r(3480),a=r(8667),s=r(6435),u=r(6330),o=r(4729),d=r.n(o);let l=new u.PrismaClient;async function f(e,t){if("POST"!==e.method)return t.status(405).end();let{name:r,email:n,password:i}=e.body;if(!r||!n||!i)return t.status(400).json({message:"All fields are required."});if(await l.user.findUnique({where:{email:n}}))return t.status(400).json({message:"Email already registered."});let a=await l.role.findUnique({where:{name:"patient"}});if(!a)return t.status(500).json({message:"Default role patient not found in DB."});let s=await d().hash(i,10);return await l.user.create({data:{name:r,email:n,password:s,role:{connect:{id:a.id}}}}),t.status(201).json({message:"User registered successfully."})}let P=(0,s.M)(n,"default"),p=(0,s.M)(n,"config"),c=new i.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/auth/register",pathname:"/api/auth/register",bundlePath:"",filename:""},userland:n})},3480:(e,t,r)=>{e.exports=r(5600)},4729:e=>{e.exports=require("bcryptjs")},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6330:e=>{e.exports=require("@prisma/client")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return r}});var r=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=2478);module.exports=r})();