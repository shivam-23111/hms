"use strict";(()=>{var e={};e.id=814,e.ids=[814],e.modules={3480:(e,t,n)=>{e.exports=n(5600)},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6330:e=>{e.exports=require("@prisma/client")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},6808:(e,t,n)=>{n.r(t),n.d(t,{config:()=>l,default:()=>d,routeModule:()=>f});var r={};n.r(r),n.d(r,{default:()=>u});var a=n(3480),s=n(8667),i=n(6435);let o=new(n(6330)).PrismaClient;async function u(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});console.log("Request body:",e.body);let{patientId:n,userId:r,date:a}=e.body;if(!n||!r||!a)return t.status(400).json({message:"All fields (patientId, userId, date) are required."});let s=parseInt(n),i=parseInt(r);if(isNaN(s)||isNaN(i))return t.status(400).json({message:"patientId and userId must be valid numbers."});let u=new Date(a);if(isNaN(u.getTime()))return t.status(400).json({message:"Invalid date format. Use ISO format (e.g., 2025-06-15T10:00:00Z)."});try{let e=await o.patient.findUnique({where:{id:s}}),n=await o.user.findUnique({where:{id:i}});if(!e)return t.status(400).json({message:`Patient with ID ${s} not found.`});if(!n)return t.status(400).json({message:`Doctor with ID ${i} not found.`});let r=await o.appointment.create({data:{patientId:s,userId:i,date:u,status:"Scheduled"}});return t.status(201).json({appointment:r})}catch(n){console.error("Error creating appointment:",n);let e="Unknown error";return n instanceof Error&&(e=n.message),t.status(500).json({message:"Failed to schedule appointment.",error:e})}}let d=(0,i.M)(r,"default"),l=(0,i.M)(r,"config"),f=new a.PagesAPIRouteModule({definition:{kind:s.A.PAGES_API,page:"/api/patient/schedule",pathname:"/api/patient/schedule",bundlePath:"",filename:""},userland:r})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return n}});var n=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var n=t(t.s=6808);module.exports=n})();